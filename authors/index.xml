<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Authors | riita10069</title>
    <link>https://riita10069.me/authors/</link>
      <atom:link href="https://riita10069.me/authors/index.xml" rel="self" type="application/rss+xml" />
    <description>Authors</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>riita10069@gmail.com</copyright><lastBuildDate>Thu, 31 Dec 2020 18:19:39 +0900</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Authors</title>
      <link>https://riita10069.me/authors/</link>
    </image>
    
    <item>
      <title></title>
      <link>https://riita10069.me/authors/admin/</link>
      <pubDate>Thu, 31 Dec 2020 18:19:39 +0900</pubDate>
      <guid>https://riita10069.me/authors/admin/</guid>
      <description>&lt;p&gt;東京工業大学 工学院情報通信系在籍(ベラール研究室にてデータサイエンスを専攻)&lt;br&gt;
大学１年の終わり頃に、プログラミング学習を始めすぐ、株式会社エブリーでReactとgolangを用いて、「DELISH KITCHEN」「MAMADAYS」のWebフロントやバックエンドの開発職インターンに参加。&lt;br&gt;
数ヶ月後には、株式会社Journeyにジョインし、データ分析チームを立ち上げる。後払いサービスの不正検知プロジェクトにおいて、MLモデルを構築。
また、DWHの構築から、継続的再学習、データ基盤の３分類などを導入したクラウドコンピューティングを構築。&lt;br&gt;
大学２年の終わり頃から一年弱、株式会社TechDesignでは経営メンバーの一員として、最高技術責任者(CTO)を担った。新規事業を企画立案し、その事業においてチームマネジメント、サービスリード、テックリードを担当。&lt;br&gt;
その後、株式会社ミクシィの開発本部CTO室にて、大人気ゲーム「モンスターストライク」の正月イベント周りのSREを担当。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最新の技術を使って、今の価値観を取り壊し、これからの常識に変えていく。&lt;/li&gt;
&lt;li&gt;世の中の情報通信技術の進歩に大きく貢献する。&lt;/li&gt;
&lt;li&gt;全員が主体的に楽しく仕事をするような世の中を作りたい。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という３つの大きな目標を掲げています。&lt;/p&gt;
&lt;p&gt;I am a student at Tokyo Institute of Technology and major in computer science.
(I&amp;rsquo;m in the Dr. Daniel Berrar Lab and study data science.)&lt;br&gt;
I started learning programming at the end of my first year of university.&lt;br&gt;
Immediately after that, I started working as a software engineer intern at &amp;ldquo;every inc.&amp;rdquo;
There, I was member of the development team of a very popular recipe app &amp;ldquo;DELISH KITCHEN&amp;rdquo;.&lt;br&gt;
A few months later, I joined Journey Inc. and started the data analysis team.&lt;br&gt;
As the head of the team, I made ML models for a fraud detection project.
I also made a DWH, continuous learning platform and Data Pipeline using GCP.&lt;br&gt;
For a little less than a year, starting in the middle of my second year of university,
I was the Chief Technology Officer(CTO) at TechDesign Inc. as a member of the executive team.
I planned and developed a new business and was responsible for team management, service lead, and tech lead in that business.&lt;br&gt;
After that, I joined the CTO Office at Mixi Inc. and is a reliability engineer to support the New Year&amp;rsquo;s event of the very popular game &amp;ldquo;Monster Strike&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;これまでの開発経験を列挙する。&lt;br&gt;
I have the following skills.&lt;/p&gt;
&lt;h3 id=&#34;skills&#34;&gt;Skills&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Web&lt;/em&gt;&lt;br&gt;
React(Atomic Design), golang(echo, DDD), Ruby(Rails)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Infra&lt;/em&gt;&lt;br&gt;
Kubernetes, MySQL(sharding, replication, tuning), Redis, worker-pool&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Database&lt;/em&gt;&lt;br&gt;
MySQL, Postgres&lt;/li&gt;
&lt;li&gt;&lt;em&gt;DevOps&lt;/em&gt;&lt;br&gt;
CI(cloudbuild, circleCI, actions), CD(Spinnaker), Infra as Code(Terraform, Dockerfile, kustomise)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;MLOps&lt;/em&gt;&lt;br&gt;
jupyter, papermill, airflow(cloud compsoer), DWH, flask(pandas-gbq), Dataproc, Datapipeline&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Collect Data&lt;/em&gt;&lt;br&gt;
fluentd, stackdriver, Pub/Sub, Dataflow(streaming), BigQuery&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Data processing&lt;/em&gt;&lt;br&gt;
SQL(BigQuery), pandas, spark(python), feature-tool(python)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;MLModel&lt;/em&gt;&lt;br&gt;
table(scikit-learn, light gbm, BigQueryML, Spark), Vision(CNN, VGG, resnet), NLP(mecab, Word2Vec)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Business&lt;/em&gt;&lt;br&gt;
Manager, MRD, PRD, Resourceful, SEO, GDN, KPI, OKR&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;affiliation&#34;&gt;Affiliation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://educ.titech.ac.jp/ict/&#34;&gt;東京工業大学工学院情報通信系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/view/data-science-lab/home&#34;&gt;ダニエル・ベラール研究室(Data Science Laboratory)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jizi.jp/&#34;&gt;工大祭実行委員会 渉内局(retired)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://volare.site/&#34;&gt;学生エンジニア団体Volare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.venture-tnk.com/&#34;&gt;東大起業サークルTNK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;philosophy&#34;&gt;Philosophy&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://riita10069.github.io/aboutme/post/first-post/&#34;&gt;主体的な姿勢であること&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/riita10069/items/065ee0b5e32fdc10b22c&#34;&gt;成果を出すために取り組んでいること&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;extra-activities&#34;&gt;Extra Activities&lt;/h3&gt;
&lt;h4 id=&#34;publish-oss&#34;&gt;publish OSS&lt;/h4&gt;
&lt;h5 id=&#34;a-hrefhttpsgithubcomriita10069cynthiacynthiaa&#34;&gt;&lt;a href=&#34;https://github.com/riita10069/cynthia&#34;&gt;cynthia&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;made by &lt;strong&gt;golang&lt;/strong&gt;.&lt;br&gt;
Cynthia ensures test-driven development.&lt;br&gt;
When you use it in CI, it ensures that untested methods are not introduced.&lt;br&gt;
The reason for this is that Cynthia alerts you to a function that has no tests.&lt;br&gt;
テストのない関数を警告してくれます。CIやreviewdogに組み込むことでTDDを徹底できます。\&lt;/p&gt;
&lt;h5 id=&#34;a-hrefhttpsgithubcomriita10069check_interfacecheck_interfacea&#34;&gt;&lt;a href=&#34;https://github.com/riita10069/check_interface&#34;&gt;check_interface&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;made by &lt;strong&gt;golang&lt;/strong&gt;.&lt;br&gt;
check_interface warns against interfaces that are not implemented.&lt;br&gt;
Interfaces that are not implemented in any method are the cause of the nill pointer exception.&lt;br&gt;
どのメソッドにも実装されていないインターフェイスに警告を出します。&lt;br&gt;
それによって起こる実行時エラーを防ぎます。\&lt;/p&gt;
&lt;h5 id=&#34;a-hrefhttpsgithubcomriita10069mozukumozukua&#34;&gt;&lt;a href=&#34;https://github.com/riita10069/mozuku&#34;&gt;mozuku&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;made by &lt;strong&gt;golang&lt;/strong&gt;.
Mozuku returns a thesaurus of the received words. Mozuku is an OSS for natural language processing.
It is useful when you want to compensate for similar words and notational distortions.
受け取った単語の類似語やひらがな表記などを返してくれる自然言語処理のためのシソーラスOSSです。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
