<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>主体性 | riita10069</title>
    <link>https://riita10069.me/categories/%E4%B8%BB%E4%BD%93%E6%80%A7/</link>
      <atom:link href="https://riita10069.me/categories/%E4%B8%BB%E4%BD%93%E6%80%A7/index.xml" rel="self" type="application/rss+xml" />
    <description>主体性</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>riita10069@gmail.com</copyright><lastBuildDate>Thu, 31 Dec 2020 18:19:39 +0900</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>主体性</title>
      <link>https://riita10069.me/categories/%E4%B8%BB%E4%BD%93%E6%80%A7/</link>
    </image>
    
    <item>
      <title>私が目指す、全員がリーダーの組織とは何か</title>
      <link>https://riita10069.me/post/the-best-leaders/</link>
      <pubDate>Thu, 31 Dec 2020 18:19:39 +0900</pubDate>
      <guid>https://riita10069.me/post/the-best-leaders/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;　あなたは組織に所属したことがあるだろうか。どの組織にも、所属したことがないということはないだろう。組織というのはとても身近な存在であるからだ。大学生ならサークルや研究室に所属しているだろう、アルバイトをしていればそこも組織である。社会人であれば、働いている企業にも多くの組織があるのだ。ところが、多くの者が組織について深く考えたことはないだろう。私が「組織というのは何か」について真剣に考えるようになったのは、大学入学後に工大祭実行委員会に所属し、組織として成果を求められるようになってからである。その後、私はある事業会社へ最高技術責任者、すなわちCTOとして抜擢され、ゼロから新規事業を構想し、１０人以上の開発組織も作り上げた。これらの経験では、良い組織とはなんであるかについて深く考えさせられた。&lt;/p&gt;
&lt;p&gt;　一般に、１つの組織にはその大きさにかかわらず、１人の役職上のリーダーが存在する。さきほど述べたように、私は１つの事業会社において役職上のリーダーであったわけだ。サークルには代表がいるし、研究室には教授がいる。世の中の組織というのは、このような構図で機能しているわけだ。この構図においてリーダーとそうでない人(以下、メンバー)の割合はメンバーの方が圧倒的に多い割合となる。これは非常に一般的な話だ。&lt;/p&gt;
&lt;p&gt;　ここから、リーダーの仕事はメンバーとどう違うのか、リーダーシップとはどのようなスキルであるのか。について述べよう。まず、組織というのは、組織自体のためにあるわけではない。組織が機能することによって、社会全体に対して貢献するためにある。そのためリーダーは「その組織の持つ機能は何か」に注目すべきである。そして、その組織に特有の使命を果たすことに責任を持つことこそがリーダーシップというスキルの１つである。特に日本においてはこれができている人が非常に少ない。多くの人が組織としてやるべきことは何かではなく、自分個人としての成果を最大化することに焦点を当てている。自分が出世すれば会社が儲かるかどうかは重要ではないというような考え方は典型的なリーダーシップというスキルを持ち合わせていない人の考え方である。その組織に特有の使命とは何か、それを果たすことを最終目標に置いていることをリーダーの前提条件としてください。２つ目のリーダーの仕事は、仕事を通じてメンバーを活かすことである。活かすというのは、抽象的に感じるだろう。具体的に述べれば、人間的および技術的な成長を提供し、働くことが楽しいと感じられるようにすることだ。多くの場合、人間というのは、所属する組織によって、社会的な地位、コミュニティを得ることになるので、その組織は人生の中心となる。特に仕事において顕著である。そのため、そこで働く人を活かすことというのは、組織を構築する上で最も大切なことである。３つ目は、最終的に決断することだ。日本においては意思決定をコンセンサスにおいて行うというような文化が見受けられる。多数決といった手法はそれに近い。しかし、本来の意思決定はそれではない。意思決定とは、答えを得るためのアプローチであるべきなのだ。言い換えると、前提としてリーダーに求められる決断というのは成果主義であるべきであるということだ。成果主義というのは、それまでの過程や努力以上に、成果を重視する考え方であり、その環境においてのみリーダーの３つ目の責務として決断が発生する。簡単な具体例を考えよう。君のユニットクラス(東工大における１年生が所属するクラス)で工大祭に模擬店を出店することを考える。最初にクラスのメンバーは何を出店したいか集まって話すだろう。ここで重要なのはそのクラスが持っている目的だ。2種類のパターンが考えられ、「利益額をKGIとして設定し、それで豪華な打ち上げをしようとしている。」もしくは、「お祭りだから全員が楽しければそれでいい」の２つに１つになるだろう。前者であれば、様々な案は、どのくらいの費用がかかり、どのくらいの集客が見込めるのか。客単価はいくらなのかといったことが論点となって議論が交わされるだろう。そして議論の結果誰かがリーダーシップを発揮して、決断をするだろう。ところが後者であれば、多数決や場の雰囲気で決めれば良いので、誰かがリーダーシップを発揮して決断する必要はないのだ。こうなると大きく話が変わってくる。もっと言えば、前者のような成果主義の組織では、１０人中９人が焼きそばがやりたかったとしても、「タピオカの方が楽にたくさんの人が買うのではないか。利益率も高いので、もう一度去年の売り上げからタピオカが売れる数を推定して、比較検討しよう。」と声を上げていうべきなのである。それこそがリーダーシップなのである。そしてリーダーシップとはここで終わらない。「客単価と見込み客数を手分けして調査しよう」「より安い仕入先がないかさらに調べてみよう」「天気によってはタピオカは売れないのではないか」など、さまざまな条件を考慮して次に行うべきアクションを提案していくスキルはリーダーシップであり、やはり成果主義の組織にのみ必要だ。日本においては、ビジネスの場でさえ、後者のような組織が少なくない。成果よりも組織の輪を優先するような考えだ。先ほどの例であれば、多くの日本企業のトップマネジメントは焼きそばを作ることに決める。全ての関係者に対して角が立たないように方向性を定めることは、本来の意思決定ではなく、そのような組織のリーダーは決断するという責務を放棄していて、リーダーとして不十分だ。そして4つ目の責務として、主体的に次のアクションを提案し、実行するというものがある。これも成果主義の組織においてのみ成り立つ。先ほどの例では、焼きそばで行くか、タピオカにするかを決断するために必要なファクトを集めることを提案するリーダーがいたようだ。彼のように次のアクションを提案するスキルは紛れもなくリーダーシップである。このような成果のための提案が、成果主義ではない社会では、自分の意見ばかり押し付けてくる強引な人と捉えられがちです。特に日本ではなぜか成果主義の組織が少ないので、そのように捉えられがちですが、社会で大きな成果を出すためには非常に重要なスキルであることは言うまでもない。また、よくあるリーダーへの批判として、指示ばかりして自分は何もしないということを聞く。指示ばかりして実行しないというのはリーダーではない。リーダーシップというスキルには、提案を組織の成果のために実行することも含まれている。誰に言われたわけでもないネクストアクションを生み出し、手と足を動かして実行するのがリーダーのやるべきことだ。多くのステークホルダーが絡むのであれば、自ら調整し説得して提案を実行することがリーダーには求められる。
　少し話が長くなったが、リーダーシップというスキルは次の４つを持つ人と要約できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;その組織が果たす社会的な役割に着目し、組織としての成果を最優先するスキル&lt;/li&gt;
&lt;li&gt;組織に所属する他のメンバー全員が、成長、活躍、楽しめるようにするスキル&lt;/li&gt;
&lt;li&gt;組織としての成果を大きくするために、自らが最終的な決断を下すスキル&lt;/li&gt;
&lt;li&gt;主体的に次のアクションを提案し、実行までリードしていくスキル&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;そして、私は組織というのはメンバー全員がリーダーのように振る舞うべき(すなわち上記の４つのスキルを身につけ発揮する)ということを次項以降を使って述べたい。&lt;/p&gt;
&lt;h2 id=&#34;なぜそれほどリーダーシップが重要なのか&#34;&gt;なぜ、それほどリーダーシップが重要なのか&lt;/h2&gt;
&lt;p&gt;　私は常々、思考力や技術力によって、戦略を決定することの重要性だけでなく、リーダーシップを発揮することによって、戦略を実行することの重要性について述べている。企業価値を高めていくために、経営者だけでなく、すべての従業員が課題を模索し、解決策を検討する段階から組織の中で有機的に働き、様々なステークホルダーと調和しながらボトムアップ的な意思決定をしていく必要がある。これは、成果主義の事業会社でCTOというトップマネジメントをしていた時に感じたことだ。&lt;/p&gt;
&lt;p&gt;　具体例を交えて説明しよう。君が普段の業務に関して、既存のやり方を否定して新たなやり方を提案したいとしよう。その手法によって大きな問題が解決のだ。しかし、どんなにその新しい手法によっていいことがあるからといって、それをすぐに導入しようとはならない。それでは、本当にいい結果が得られるかわからないし、そのやり方にもどこかデメリットがあるかもしれないのだ。それに、君の考える解決策の他にももっと良い方法があるかもしれない。その時に、君がやるべきことは、力づくであなたの意見を通すことではないだろう。これは誰にだってわかることだ。まずは、君の提案において、関わりのある様々な部署の人とコミュニケーションをとり、どのような変化が生じるかについて深く検討しなければならない。なにか新しいことを始めれば、必ず多くの批判を受ける。それでも、あなたは様々な部署のルーチンを阻害しないようなより良いやり方を考えることをしなければならない。そして、最終的に既存のやり方を変えることができるかどうかは、あなたへの信頼とあなたの人を巻き込む力にかかっている。多くのステークホルダーを巻き込むことでより俯瞰的かつ包括的な、良い提案をすることができるようになるだろう。その結果として、多くの人の信頼も集められるようになる。そうなって、初めてこれまでの常識は変えられる。この時点で、最終的に何かを変えることができるのは、どんな分野であれ、思考力や技術力ではなく、リーダーシップであることにお気づきだろうか。&lt;/p&gt;
&lt;p&gt;　まだ腑に落ちない人のために、もっと具体的な話をしよう。あなたの会社もしくは研究室のゴミ箱の分別がされていないから、みんなに分別をしてほしいと思ったとしよう。この時、紙と鉛筆を用意して、完璧な解決策を考えるだろうか。例えば、あるごみは燃えるゴミであるが、これは洗ってから燃えないゴミにすることができるとか。そういったことを書き出すだろうか。もちろん、それも重要だ。分別の仕方がわからないのでは、分別ができるわけがないのだから。しかし、それではおそらく問題は解決しないだろう。本質的にあなたが他のメンバーを巻き込むことができないとあくまでも解決策で終わってしまうのだ。つまり、どんなに、あなたが完璧にゴミの分別の方法を知っていても、この問題は解決しない。ここで、必要なのはリーダーシップなのだ。あなたが周りの人を巻き込んで、ゴミを分別するように行動を変えさせることが必要となっている。&lt;/p&gt;
&lt;p&gt;　これは、技術職においても変わらない。私のようなソフトウェアエンジニアが、大規模なシステムの変更が必要な場合を想像してみる。技術スキルの高い優秀なエンジニアがいれば、実装の構成やパフォーマンスにおける課題などは事前に見つかるかもしれない。ところが、それはあくまでも机上の空論にすぎない。実際にシステムを変更するには、その素晴らしい設計をプログラムコードとして実装しなければならない。実際のところ、大規模システムにおいて、既存のプログラムコードやアーキテクトの全てを把握している人は、1人もいないのだ。1000人規模のエンジニアが集まって、効果的に協力し合わなければプロジェクトは進まない、結局ここで全員のリーダーシップが必要になってくるのだ。技術だけでは、課題は解決しない。最終的に課題を解決するのは、その技術を実行するリーダーシップなのだ。&lt;/p&gt;
&lt;p&gt;　「みんなが有機的に協調すれば解決できるが、一人一人では解決できない課題」というのが世の中には溢れかえっているからこそ、リーダーシップというスキルを持っていて、さらに、役職上のリーダーでなくとも、リーダーシップを発揮できる人は大きな成果を上げるために必要不可欠であるということだ。&lt;/p&gt;
&lt;h2 id=&#34;リーダーシップは全員に必要&#34;&gt;リーダーシップは全員に必要&lt;/h2&gt;
&lt;p&gt;　よくある間違った考え方に、「リーダーとは一つの組織に一人か二人いればいい」という意見がある。社会人であっても、リーダーシップを問われたことはない。言われたことを淡々とこなすことだけを求められてきたという人も少なくない。それでいて、彼らは「言われたことをしっかりやると人生うまくいく」という大きな勘違いをしている。小学校から始まって、大学受験まで、「誰かが作った一つに決まっている答えをいかに効率よく解けるか」を競うような性質のものが教育であるから、仕事においてもそうだと思ってしまっているのかもしれない。実際は、実際の社会ではそれは全くの真逆になる。誰かの作ったテストで100点満点をとれる人に価値があるのは、高校生までであり、社会では役に立たない。社会で価値のある人というのは、自らまだ答えの出ていない問いを立て、それに対して自分なりの答えを見つけ出せる人である。&lt;/p&gt;
&lt;p&gt;　ところが、勘違いをしている人たちは、リーダー以外の人は自分の主張を強くしてはならず、リーダーにやれと言われたことをやればいいとさえも思ってしまうのだ。このような考えは、さらに致命的な間違えである。&lt;/p&gt;
&lt;p&gt;　全員がリーダーシップを発揮する組織は、一人のリーダーがいる組織よりも圧倒的に大きな成果を出すことが出来ると私は声を大にして主張しよう。このような私の意見に対し、「船頭多くして船山に登る」というようなことであり、トラブルが起きるという反論をする者がいるので、それに対する私の回答を述べると、私のいうリーダーというのは、「チームとして成果を出すこと」を「自分の意見が採択されること」よりも重視している人を指している。(これは冒頭で述べた１つ目の責務に値する。)その前提において、リーダーが何人いようと、全員にとって海に出て魚を取ることがその組織に特有の責務であるので、どう転んでも船が山に登ることはない。その諺とその諺のように振舞っている組織は、「自分の意見が採択されること」に躍起になっている人ばかりが集まっている組織ということを示しているだけに過ぎない。&lt;/p&gt;
&lt;p&gt;　では、一人をリーダーにおくチームについて考えると、リーダー以外のメンバーというのは、フォロワーとして、言われたことをこなすだけになる。このような場合には、2種類のフォロワーが生まれるだろう。まず、チーム全体を率いることは自分の役割ではないと割り切り、自分の個人的な成果を大きくすることに意識が向いていくフォロワーだ。これでは、チームとしての成果は大きくならないし、その人のポテンシャルを十分発揮できず、ボトムアップ的な意思決定もできない。また、モチベーションの観点からいえば、リーダーシップを発揮しない人は、そもそも成果を出すことはリーダーの役割であり、成果への興味すらなくなる場合も多い。現実問題、私はただ指示に従い、結果に対する責任は全てリーダーのものである、自分の責任では一切ないと考えているような人をたくさん知っている。このような状態では、チームとしての成果は大きくならないし、多くのフォロワーは働いていて楽しいだろうか。&lt;/p&gt;
&lt;p&gt;　一方、私の考える全員がリーダーの組織について話す。私がある事業会社でCTOをしていたときには、私は役職上のリーダーであったわけだが、私の素晴らしいチームメンバーは全員がリーダーシップを発揮していた。役職上の責任者である私は最終的な顧客体験に対して、オーナーシップを発揮しています。 しかし、役職上の責任者とリーダシップというスキルは全く別のものだ。他のメンバーは役職がないからと言って、私の指示を待ち、与えられた業務を遂行するというのとは大きく異なっていた。彼らは、自分の関わるプロジェクトについて必要な実装や仕様について把握していて、どのように分担し進めていくかについて積極的に話し合いをした。話し合いにおいても、自分が合意形成をリードするという意思があり、話し合いで得られた結果だけにフォーカスする人はいない。&lt;/p&gt;
&lt;p&gt;　また逆に、上長である私ががどれだけある機能の必要性について説明しても、チームメンバーはそれを採用するかしないかについて主体的に自ら考えるのだ。採用されないことも多々あるが、「なぜこの意見を取りいれなかったのか」について聞き、その判断を批判したことは一度もない。なぜなら、私はメンバーに「決断のできるエンジニア」になってほしいからである。私は、どの技術や仕様を採用し、逆にどれを採用しないのか。それを一人一人のエンジニアが自分で考えて、動いて、意思決定することを求めた。つまり、一人一人のエンジニア自らが決められるだけの裁量を与え、決断しなければ前に進まないような状況をつくっていたのだ。&lt;/p&gt;
&lt;p&gt;　人は意思決定の数だけ成長していき、人の成長に合わせて組織も成長していく。だから、企業においてもっとも大切なことは全ての意思決定を最小化し、全てのメンバーが自身で考えて意思決定をしていくことであるという信念のもとに、あらゆる裁量を任せたのだ。この組織では、私では思いつかないような面白いアイデアがたくさん生み出され、非常に高速にデプロイが繰り返され、最先端の技術が次々に導入されていった。&lt;/p&gt;
&lt;p&gt;　大規模SaaSを3ヶ月でリリースし、信頼性、柔軟性、可観測性の高い疎結合なマイクロサービスアーキテクチャが実現した。運用フェーズでは、土日を含めても均して1日2回程度のデプロイ(サービスのバージョンアップ)が実行され、非常に高速な改善が実現された。10人程度のエンジニア組織では目覚ましい成果である。それでいて、私の開発メンバーは一人残らず全員が、最高に今が楽しいと言っていたのだ。もちろん私も例外ではない。最高に楽しい仕事だったと今振り返っても本当にそう思うのだ。&lt;/p&gt;
&lt;p&gt;　冒頭で述べた、リーダーの４つの責務を思い出してほしい。これらについて考えれば、全員がリーダーの組織を作ることが組織として最高の成果を上げることを証明できる。１つ目の、組織に特有の使命というのは、私たちの場合なんであろうか。私たちが開発組織である以上、技術的な負債を極限まで減らし、信頼性、柔軟性、可観測性の高い疎結合なマイクロサービスを高速に開発、改善することである。これは、明らかに高度な次元で達成されていた。また、会議やミーティングで開発組織の利益を最優先し合意形成をリードするような姿勢を感じられた。２つ目のメンバーを活かすことも達成できてた。人は意思決定の数だけ成長できるので、多くの意思決定の機会をメンバーは得ることになり、多くの成長の機会を手にしていた。そして、誰もが今振り返っても楽しかったと口を揃えていうような開発組織だったのだ。３つ目の決めることという責務を私は放棄したように感じるかもしれない。そのように感じているのならば、それは大きな間違いだ。冒頭でも述べたが、意思決定は合意を取るためにあるものではない。意思決定においての目的はあくまでも答えを得ることなのである。これにおいて、私はあるドメインにおいて最も知識を有するメンバーの決断を支持するという決断をしたのだ。特に開発組織においては手を動かして開発しているその技術に関して、私の考えを実行するというのはナンセンスである。答えに最も近づくことを優先することができるのは、メンバー全員が適切に意思決定する組織なのである。そして、そのようにすることに決めたのは紛れもなく役職上のリーダーである私であり、私は組織の成果のために決断するという責務を全うしているのだ。そして４つ目は、主体的に次のアクションを提案し、実行まで責任を持って遂行することだ。これも全てのメンバーが達成していた。さらに求められた以上の価値を提供する次元まで進んでいた。機能要件やユーザーの要望などをメンバーが直接組み上げ、プロダクトの改善に関するアイデアをボトムアップ的に生み出していた。仕事は与えられるものではなく、自分で作るもの。と私が繰り返していたため、新しいことをやりたいと言いやすい雰囲気を作ることに成功していた。&lt;/p&gt;
&lt;p&gt;　まず、これらのことからわかるのは、全員がリーダーシップを発揮する組織を作るリーダーは、組織の代表者として圧倒的な成果を残しているということである。そして、この組織の奇妙なことは、私だけではなく、メンバーもこの４つの条件を全て満たしていることだ。&lt;/p&gt;
&lt;p&gt;　つまり、冒頭で私が述べた４つの責務は、リーダーがだけ満たすべきものではなく、組織に所属する全員が満たすべき原則であるとここで強く主張しよう。&lt;/p&gt;
&lt;h2 id=&#34;リーダーシップを身につけるために必要なこと&#34;&gt;リーダーシップを身につけるために必要なこと&lt;/h2&gt;
&lt;p&gt;　リーダーシップというスキルは役職上のリーダーであるかどうかに関わらず、全ての人にとって重要であることはご理解いただけただろう。であれば、すぐに先ほど述べた4つのスキルを身につけてほしいがそれは意外と難しいかもしれない。組織の成果のために何かすると言われても結局は、与えられた仕事をこなすような生活に戻ってしまう、自ら仕事を生み出すなんて難しい、と感じてしまうかもしれない。これから述べることについて意識することは、具体性が高く取り組みやすい。そして、これを続けていると、4つのリーダーシップというスキルを満たせるような状態になるのだ。&lt;/p&gt;
&lt;p&gt;　１つ目は「常にバリューを出すこと」である。バリューというのは直訳すれば付加価値です。仕事をしている相手に対して貢献をして、それを価値として受け取ってもらえた時にバリューが生まれる。ここで私が言いたいのは、些細なことでも会社に貢献するための価値を常に考えることが重要であるということだ。プレゼン資料１つとっても、その資料によって受け取り手の課題が解決しているかについて考える。上司を納得させるための資料ではなく、そのプロジェクトのための資料になっていてほしいと考えている。また、会議で発言しない人のバリューはゼロだ。私は出席した会議で発言を一切しないということはほとんどない。疑問に感じたところがあれば質問すれば良いし、他の提案があればすればいい。判断材料になるような自分の知っている知識は提供した方がいい。何も離さないでただ座っているだけだったとすれば、会議によって得られる結論はなんら変わらない。私はここで、当たり前のことしか言っていないが、実際の会議ではただ座っているだけの人が少なからずいる。彼らは会議を何かのセレモニーだと思っているのだろうか。会議は意思決定の場であるという認識を持つ必要がある。そして、そこに何かしらの貢献をすることは、あなたがいることで生まれる付加価値、すなわちバリューであると認識してほしい。&lt;/p&gt;
&lt;p&gt;　２つ目は、ポジションを取ることだ。私はエンジニアという職業をしているため、チームの誰も知らないことというのが業務上たくさん出てくる。私はいわゆるメガベンチャーと呼ばれるような企業で働いていて、チーム内で通信で使用する言語として新しいものを導入しようという動きがあった。実際に導入できるものであるのか、様々な観点から検証する必要があったので、「では、その通信の実装について調べてみます」と言って私はそれについて詳しく調べる担当となった。その言語の内部実装だけでなく、実際にどの程度通信が早くなるかなどの実験を繰り返し行いレポートを作成し、翌日の会議で提出し、それによるメリットとデメリットについて詳細に述べた。私は数千万人の顧客を抱える大規模プロジェクトに入ったばかりであり、他のキャリアの長いメンバーに遠慮してしまったため、ポジションを取ることができなかった。その時、チームメンバーに「それでなに？君は調査することが仕事なの？」と皮肉交じりに言われたことを鮮明に覚えてる。私はポジションを取るべきだったのだ。遠慮をする必要はなく、これは導入した方がいい。するべきではないというポジションをとり、自分の意見をはっきりと述べることがバリューである。成果主義の組織において問われるのは過程ではなく成果そのものであり、成果につながる結論を自ら導き出すことが求められている。それ以降、私が関わる全ての議題に対して、自分のポジションをとるようにしている。先輩エンジニアの意見の方が合理的であれば、ポジションを取り直せばいいのだ。&lt;/p&gt;
&lt;p&gt;　３つ目は、自分の仕事におけるリーダーは常に自分ということだ。自分が与えられた仕事というのは、チームメンバーの誰よりも自分が詳しいのだ。そう言った意味で、自信を持ってリーダーシップを発揮していけばいい。関係者が上司であれ、社長であれリーダーの自覚を持って成果をあげるのだ。一般的には自分が作った資料を上司がチェックすると考えられているような打ち合わせだとしても、そのように捉えていてはいつまでもリーダーシップは発揮できない。資料を作った本人である自分が、よりキャリアの長い上司にアドバイスをもらい改善するための打ち合わせと捉えるようにするべきだ。つまり、この資料については、最終的な決断をするのは自分であり、組織の利益を最大化するための手段として上司にアドバイスをもらっているということである。このような考え方を全員が持っている状態になったら、全員がリーダーの組織であり、この自分の仕事というのを明確化するための工夫を私はたくさんしていた。特にマイクロサービスアーキテクチャというものの導入が本質的であるが、ここで詳細は語らない。私がここで強調したいのは、ひとりひとりが自分の仕事に対しては自分が常にリーダーという自覚を持つことで、全員がリーダーのチームは作れるということだ。&lt;/p&gt;
&lt;h2 id=&#34;さいごに&#34;&gt;さいごに&lt;/h2&gt;
&lt;p&gt;　以前、主体的な姿勢であることは楽しいんだという記事を書いた。
そして、常に主体的に先のわからない挑戦を続けていくことは、もはや幸せそのものであるという結論付けまでした。
あれを書いたは、私が大学二年生の終わり頃、ちょうどプログラミングを初めて一年たった頃にアドベントカレンダーで書いたものだった。&lt;/p&gt;
&lt;p&gt;　それからちょうど1年が経つと思うと、少し早いと感じるかもしれない。でも、この一年で得たものは本当に大きかった。
初めて事業会社のCTOとして働いた。10人以上のエンジニアにとって最高に楽しくて、成長できる環境にしたい。
そして、企業としても成長確度を高めていきたいと考えて、双方を実現した組織がたまたま全員がリーダーの組織だったのだ。
でも、１つ目の記事を読んでいただければ、私が役職上のリーダーとして目標を掲げた時にそのような組織になることはもはや必然だったと感じられるかもしれない。
それは、役職上のリーダーの最大の仕事は、その組織の目標を掲げることであるからだ。&lt;/p&gt;
&lt;p&gt;　私は、これからもリーダーというポジションで多くの人にとって楽しくて成長できる環境を作っていきたいと考えているし、
それと同時にマイクロサービスアーキテクチャによるチームの分断とDevOpsの推進といった技術的な試みを続けていきたい。
マイクロサービスアーキテクチャは組織のためのアーキテクチャというだけでなく、DevOps、SRE、DDDといった技術を包括した運用のためのアーキテクチャであることも魅力的だ。
多くの自動化技術などによって、コミットからデプロイまでを道のりを最小化し、サイトの信頼性をあげることもできる。&lt;/p&gt;
&lt;p&gt;最後までご覧いただき、ありがとうございました。
次は、マイクロサービスアーキテクチャの技術的な投稿をしたいと思っています。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tech Designという会社でCTOをした。</title>
      <link>https://riita10069.me/post/cto/</link>
      <pubDate>Sun, 27 Sep 2020 18:52:37 +0900</pubDate>
      <guid>https://riita10069.me/post/cto/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;私は、2020年の2月から8ヶ月間、株式会社Tech Designという会社でCTO(最高技術責任者)をしていました。
(役員ではなく、株式などは持たない業務委託契約なので、アルバイトみたいな感じですが。)
うちの大学では、10月からは研究室に配属されることになっているので、そちらに専念しようと思います。&lt;/p&gt;
&lt;p&gt;CTOという立場を経験して、そこで得たもの、成し遂げたこと、感じたことをまとめます。
力を入れて書いた内容なので、多くの人の目に止まることを祈っています。&lt;/p&gt;
&lt;h2 id=&#34;ctoとしてどんなことをしたのか&#34;&gt;CTOとしてどんなことをしたのか&lt;/h2&gt;
&lt;p&gt;最初に僕がこの会社に話を聞きに来た時は、会社では、ボランティアのマッチングプラットフォームを作っていました。
しかし、その事業はあまりうまくいかず、導入企業数は0でした。
また、プロダクトもSESの方が中心となっていて、社内のエンジニアにノウハウは一切残っていない状態でした。
創業から1年半頃でしたが、事業もチームもノウハウも肩書きも何一つない会社でした。
その会社の創業者と話をして、僕にはCTOとしてこの会社に入って、社内のチームをリードして、BCPに関連する新規プロダクトを構想し実装ほしいという話をされました。&lt;/p&gt;
&lt;p&gt;そして、そのBCP事業の立案のために、外資系大手コンサルティング企業でBCPを経験していた方を紹介していただき、本当に長い期間をかけて議論につきあっていただきました。&lt;/p&gt;
&lt;p&gt;その結果、僕は、BCPやサプライチェーンの管理をし、災害情報を収集する総合的な防災プラットフォームを構想し、実際のUXと機能要件に落とし込みました。&lt;/p&gt;
&lt;p&gt;ビジネスモデルの構想や機能要件の定義だけでなく、経営戦略、開発戦略、採用戦略、営業戦略、チームの構築、主要OKRとKPIの選定、技術選定、サービス説明資料作成など、会社に関わることの全ての裁量をいただきました。&lt;/p&gt;
&lt;p&gt;当然今年は大学3年生で、本業の学業も忙しく、やらなければならないことが多すぎて目が回るような日々でした。
頑張りすぎて体調を崩したり、手を抜こうかと思ってしまうような時もありましたが、チームに支えられていたので、なんとか頑張れました。なんだかんだ毎月200~250時間程度は稼働していました笑。
モダンな技術や僕の思想が優秀な学生やエンジニアの方々に刺さったのか、採用は非常にうまくいき、すぐに10人まで人数は増えました。とても仲がよくて楽しい会社になりました。
「全力で楽しむけれど、緊張感を忘れない」という弊社の行動指針の一つは、僕ではなくメンバーの一人が言ってくれたものですが、本当にその通りの会社になりました。
僕が作ったというよりは、チームがそうしてくれた気がしています。&lt;/p&gt;
&lt;p&gt;結果的には、 &lt;a href=&#34;https://www.resilire.jp&#34;&gt;Resilire&lt;/a&gt; のプロダクトをリリースし、小さいピボットなどもありながら事業を進めていくことができました。&lt;/p&gt;
&lt;p&gt;幸運にもチームメンバーの全員に(きっと)信頼していただいたので、全ての裁量をもって積極的に取り組むことができました。本当に楽しかったし、得るものも多かったです。
主体的に挑戦して成果を出す場として、最高のステージを用意してくださり、僕を信じてついてきてくれた、Tech Designのメンバーの全員に本当に感謝をしています。
本当に本当にありがとうございました。&lt;/p&gt;
&lt;h2 id=&#34;ctoとして目指した世界線&#34;&gt;CTOとして目指した世界線&lt;/h2&gt;
&lt;p&gt;とにかく僕は、「人が成長する場所」にしたいと思っています。
これは、一般論としてそこに所属している人が成長しない企業は企業としても成長していくポテンシャルがないと考えられるからです。
特にTech Designの場合は、大学生が特に中心になっていました。何も知らなくてどんなことでも吸収できる年代が集まっているのだから、この会社を人生の分岐点になるようにしたい。
僕の価値観を共有して、大きく社会に貢献できるような人材になってほしい。そして僕もそうなれるような分岐点にしたいと思っています。&lt;/p&gt;
&lt;p&gt;また、「人が成長する場所」といっても成長の観点というのは、たくさんあると思いますが、中でもエンジニアとしての「技術力」と、「主体性」の二つの観点にフォーカスしていました。&lt;/p&gt;
&lt;h3 id=&#34;技術力にフォーカスする理由&#34;&gt;技術力にフォーカスする理由&lt;/h3&gt;
&lt;p&gt;これは、主体性にも繋がる話なのですが、
&lt;strong&gt;技術力そのものが重要というよりも、「苦労して困難を乗り越えてでも達成したいと思える目標」を掲げ、それに向かって努力をして積み上げる。
そのプロセスが、人生を豊かにする&lt;/strong&gt;のではないかと考えています。&lt;/p&gt;
&lt;p&gt;なので、エンジニアであれば、(LINE, mercari, DeNAなどの)メガベンチャーと呼ばれるようなIT企業に就職しても、その中で上位層に入っていけるような人材になることを目標とするのが妥当なのではないかと思っています。&lt;/p&gt;
&lt;p&gt;また、僕を含めて大学生は数年後には大学を卒業します。その時には、新入社員として社会に出ることになります。
就職先で活躍できるくらいの実力が備えられていれば、本人だけでなく、IT業界全体の成長にもつながります。
そうすることで、&lt;strong&gt;業界全体の発展に寄与していただきたい&lt;/strong&gt;。という想いもあります。&lt;/p&gt;
&lt;p&gt;その二つの観点から、僕は、「技術力」が成長させられる会社にしたいと思っていました。&lt;/p&gt;
&lt;h3 id=&#34;主体性にフォーカスする理由&#34;&gt;主体性にフォーカスする理由&lt;/h3&gt;
&lt;p&gt;主体性というのは、僕が生きてきて一番大切にしているテーマです。
Tech Designのメンバーなら耳にタコができるほどこの単語を聞いてきたと思います。&lt;/p&gt;
&lt;p&gt;これは、
&lt;strong&gt;これまでやったことないことに全力で取り組むこと。 それだけが人生を豊かにするきっかけになり、これまでになかった理念と価値観を作り出す。&lt;/strong&gt;
と考えているので、主体的に行動している時が一番幸せだからです。
また、会社にとっても言われたことをこなすのではなく、&lt;strong&gt;自分で仕事を生み出せる人&lt;/strong&gt;が最も大きな成果をあげてくれることを僕は知っているからです。&lt;/p&gt;
&lt;p&gt;その細かい理由については、
&lt;a href=&#34;https://riita10069.github.io/aboutme/post/first-post/&#34;&gt;https://riita10069.github.io/aboutme/post/first-post/&lt;/a&gt;
こちらの記事で語っているので、ぜひ読んでほしいです。&lt;/p&gt;
&lt;h2 id=&#34;人が成長するために重要なのは&#34;&gt;人が成長するために重要なのは&lt;/h2&gt;
&lt;h3 id=&#34;意思決定の数&#34;&gt;意思決定の数&lt;/h3&gt;
&lt;p&gt;人が成長するために必要なのは、&lt;strong&gt;意思決定の数の多さ&lt;/strong&gt;です。
自分が心の底からこれがやりたいと感じたことに挑戦する。そのプロセスとそれによって得られた結果によって反省をする。それを繰り返すことで人は学習します。&lt;/p&gt;
&lt;p&gt;例えば、「この技術を導入した方がいいと思う」と提案したが、僕や他のメンバーから否定されてしまったらどうでしょうか。
その時点で、成長する機会を1つ失います。
それが続くとついには提案してもどうせ採用されないと思い、成長する機会が一切無くなります。&lt;/p&gt;
&lt;p&gt;そのために企業ができることは、全員に裁量権を与え、何事もメンバー自身が考えて決められる環境づくりです。
そのような環境のことを僕は&lt;strong&gt;全員がリーダーのチーム&lt;/strong&gt;と呼んでいます。&lt;/p&gt;
&lt;h3 id=&#34;僕が作ったのは全員がリーダーのチーム&#34;&gt;僕が作ったのは、「全員がリーダー」のチーム&lt;/h3&gt;
&lt;p&gt;よくある誤解として、「リーダーとは一つの組織に一人か二人いればいい」と思っている人がいます。
しかも、その人たちは、リーダー以外の人は自分の主張を強くしてはならず、リーダーにやれと言われたことをやればいいと思っています。そのほうがトラブルが起きないためにパフォーマンスが高いと考えている人もいます。&lt;/p&gt;
&lt;p&gt;僕がいつも言っている「仕事は人に与えられるものではなく、自分で生み出すもの」という価値観と全く逆です。
結論から述べると、組織に一人のリーダーがいるチームよりも、全員がリーダーのチームの方が圧倒的に高いパフォーマンスが出せます。&lt;/p&gt;
&lt;p&gt;まず、僕のいうリーダーというのは、「チームとして成果を出すこと」を「自分の意見が採択されること」よりも重視している人を指します。
その前提において、リーダーが何人いようと、人と人がぶつかって、トラブルになるなんてことはありません。&lt;/p&gt;
&lt;p&gt;また、一人をリーダーにおくチームの場合は、
リーダー以外のフォロワー立場に立つと、(言われたことをこなすだけですので)チームとして成果を出すことを最優先事項にするのは難しく感じます。
成果を出すことに主眼が向いていても、個人としての成果を最大化することになるのではないでしょうか？
現実問題、ほとんどのフォロワーは、ただ指示に従い、成果の責任は全てリーダーのものであると考えてしまいます。
そうすると、自分のモチベーションはなくなり、強いて言えば報酬を受け取ることになるのではないでしょうか？&lt;/p&gt;
&lt;p&gt;その結果、当然チームとしての成果は出なくなります。&lt;/p&gt;
&lt;p&gt;逆に、本題の「全員がリーダーのチーム」について考えます。
全員がリーダーのチームとはいえ、僕はCTOを担当していたわけで、役職上のリーダーがいないわけではありません。
役職上の責任者である僕は最終的な顧客体験に対して、全責任を追っています。
しかし、&lt;strong&gt;役職上の責任者とリーダシップというスキルは全く別のもの&lt;/strong&gt;です。
他のメンバーは役職がないからと言って、僕の指示を待ち、与えられた業務を遂行するというのとは大きく異なっています。&lt;/p&gt;
&lt;p&gt;僕たちは全員、自分の関わるプロジェクトについて必要な実装や仕様について把握していて、どのように分担し進めていくかについて積極的に話し合いをします。話し合いにおいても、自分が合意形成をリードするという意思があります。
話し合いで得られた結果だけにフォーカスする人はいません。&lt;/p&gt;
&lt;p&gt;僕がどれだけある機能の必要性について説明しても、チームメンバーはそれを採用するかしないかについて自ら考えます。
採用されないことも多々ありましたが、「なぜこの意見を取りいれなかったのか」について聞くことはありますが、その判断を批判したことは一度もありません。
僕は、どの技術や仕様を採用し、逆にどれを採用しないのか。それを一人一人のエンジニアが自分で考えて、動いて、意思決定することを求めました。&lt;/p&gt;
&lt;p&gt;チームメンバーが僕の言った通りに動くと思えば、自分の影響力を考えてからでないと発言できなくなります。先週リリースされたGCPの機能を使ったら？なんて気軽に言えなくなります。
チームのマネージャーであろうがが、 株主だろうが、どんなに偉い人がどんなに強く意見を言っても、それを指示とは受け取らない。あくまでも意見だと受け取る。
そういった文化を作ることに成功していました。
弊社の行動指針に、「配慮はするが遠慮はしない」というものがあります。これも、僕ではなくチームのメンバーから出たフレーズなのですが、メンバーからこのようなフレーズが出てくるということは、本当の意味で全員がリーダーのチームが作れていたのかなと思います。
少なくとも、役職上のリーダーである僕に対して遠慮をするメンバーはいなかったんじゃないかなって思います。&lt;/p&gt;
&lt;p&gt;また、僕たちは誰にも指示されなくても、主体的に新しい技術を導入しようとします。
常に技術に対して高いアンテナを立てていて、先週リリースされたバージョンで追加された機能の実装を検討します。
全員がこういった主体的で成果を出すことに拘っている組織を作ることに成功したと思っています。&lt;/p&gt;
&lt;h3 id=&#34;どのようにして全員がリーダーの組織を作ったか&#34;&gt;どのようにして、全員がリーダーの組織を作ったか&lt;/h3&gt;
&lt;p&gt;まず一つは、マイクロサービスアーキテクチャによる責任の分割があると思います。
サービスを細かくマイクロサービスに分割することで、自分の開発しているサービスに関与する人数が少なくなるので、そのサービスに対して一人一人が責任を持つようになりました。&lt;/p&gt;
&lt;p&gt;弊社の文化として、マイクロサービスに星の名前をつけていくのですが、自分の開発しているマイクロサービスについている星の名前に愛着が沸くってメンバーが言っていたのも、責任の分割に成功している証なんじゃないかなと思いました。
また、マイクロサービスにつける名前に関しても、出来るだけ僕ではなく、開発担当者が自分達自身で決めるように促していました。そのほうが、責任感とリーダーシップが生まれると考えたので。&lt;/p&gt;
&lt;p&gt;また、技術領域に関しても、分断して、担当を割り振るようにすることで、技術に対してもリーダーシップを発揮して、積極的にキャッチアップ、布教活動を行なっている様子が伺えました。&lt;/p&gt;
&lt;p&gt;KubernetesのCustom Controllerオタクの〇〇君がいつも語っているとか、ジョブの運用したいから誰々に聞こう。自然言語処理のことは誰々に聞こう。
のような感じですね。&lt;/p&gt;
&lt;p&gt;他には、
全ての業務について、なんでそれをやるのか。どのような背景で、そのような経営的な意思決定をしたのかについて、PRDという自作の書式に従って、ドキュメントを徹底して書きました。
これによって、メンバーが全ての業務に理由を持っていて、自分の頭で考えて取り組むことができるような環境を作っていました。&lt;/p&gt;
&lt;p&gt;この会社だけでなく、世界中の全ての会社がこのように全員がリーダーになれるような会社であって欲しい。
まさに、僕の願う世界中の人が主体的に挑戦することができる世界線にたった10人だけれど、なれていたと思っています。
そして、この記事を読んでくれた人が少しでもこういった価値観になって欲しいと思います。&lt;/p&gt;
&lt;h2 id=&#34;成長する人の特徴&#34;&gt;成長する人の特徴&lt;/h2&gt;
&lt;p&gt;繰り返しになりますが、成長する人の特徴の一番は主体的な人です。
具体的に言えば、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人に言われる前に自分から気になった技術をキャッチアップする人&lt;/li&gt;
&lt;li&gt;調べろと言われる前に過去の事例を調べ新たな価値を提案できる人&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;そういった、&lt;strong&gt;仕事は人に与えられるものではなく、自分で生み出すもの&lt;/strong&gt;という価値観が定着している人は成長します。
これが一番重要なことです。&lt;/p&gt;
&lt;p&gt;そしてもう一つが&lt;strong&gt;現状に満足しないこと&lt;/strong&gt;です。
正直なことをいうと僕も一度だけ、自分よりも数億倍も実力のある技術者と話をしたときには、「一生追いつけない」なんて感じてしまったことがあります。
実際、メガベンチャーのサマーインターンシップの選考では無敗で、受託の案件では時給が1万円を超えるようなものもあるので、今のままでも、ある程度の大企業で働いたり高収入を得たりできるかもしれません。&lt;/p&gt;
&lt;p&gt;だけど、現状に満足したらそこからは一切成長しません。
僕が本当に成し遂げたいことはなんだったっけって考えるとまた熱が湧いてきます。
僕は、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最先端の技術を使って、これからの新しい時代を作りたい。&lt;/li&gt;
&lt;li&gt;世界中の人が主体的に挑戦するような世の中にしたい。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ずっと掲げているこのこの二つの目標を達成できているだろうか。
まだまだ全く達成できていません。だからこんなところで絶対に足を止めてはいけない。
まずは、技術と知識で世界の最前線にいる人に相手にしてもらえるようにならないとなって思っています。
OSSのGitHub Issueで強そうな外国人が言ってることにビビってるうちはとりあえず全然ダメだろうなって思ってます笑&lt;/p&gt;
&lt;p&gt;少しでも「細々とやっていける」なんて考えが脳裏に浮かぶような人は、成長できません。細々やっていくのがせいぜいです。
なぜなら、細々やっていけることに満足した時点でそれ以上にはなりえないからです。&lt;/p&gt;
&lt;p&gt;目標に対する執着心が強くて、高みを目指し続けられる人。
そんな人が成長できる。常に現状に不満を言っていいるくらいの人の方がいいです。
どんなに売り上げを伸ばしている会社で、どれだけいい待遇を受けていても、現状に満足しない人。事業としても個人としても、もっと上を目指し続けられる人。
そんな人こそが、本当に成長する人、これからの時代を作っていく人なんじゃないかなって思っています。
そして、僕はどんな時も現状に満足することはありません！&lt;/p&gt;
&lt;h2 id=&#34;これから&#34;&gt;これから&lt;/h2&gt;
&lt;p&gt;僕はヒューマンマネジメントとエンジニアリングの両方に興味があり、描きたいプロダクトの未来、作りたい会社の未来が手に取るように見える、ビジョナリーなCTOだと思っています。&lt;/p&gt;
&lt;p&gt;エンジニアリングに興味があると言いましたが、この夏、多くのメガベンチャーでインターンをして、当然ですが、僕の知見や経験ではまだまだ未熟な部分も多いと感じました。&lt;/p&gt;
&lt;p&gt;Yahoo!と DeNAのサマーインターンでは、シード期のベンチャーでは要求されない技術レベルを要求されました。
プロダクトのユースケースが多すぎるため、Domainモデルがとても大きく、ビジネスロジックが複雑なため、複雑な条件分岐がservice層に溢れてきていました。いかに綺麗なプログラムを書けるかという観点では要求値が全然違いました。
また、スクラム開発の規模感も大きく変わり、求められるドキュメントの確度と情報量も全然違いました。
さらに、Yahoo!のKubernetes上では4000ものコンテナが動いているらしく、
僕は、ログとメトリクスの転送プラットフォームの作成を担当したのですが、トラフィックの量も秒間10億msgなど明らかに違う次元で、一つの変数のヒープ領域への書き込みが大問題になったり、worker poolの数の最適化のために何度も何度もベンチマークを取ったりというのは印象に残りました。&lt;/p&gt;
&lt;p&gt;Yahoo!でPrivate Cloudの開発インターンに参加した時の僕のメンターの方はとても優しくて努力家でとても優秀なエンジニアでした。
僕が知らないことを優しくとてもたくさん教えてくれたので、とても楽しかったです。
このような場を体験して、僕はこの会社にいてはこれ以上成長できないし、
Tech Designにいたら最前線で活躍しているエンジニアに相手にされるようには絶対になれないと思いました。&lt;/p&gt;
&lt;p&gt;もちろん、SQLチューニング、パフォーマンス計測に始まって、スクラッチで低レイヤーシステムの実装をしたり、GCE上にKubernetesでサービスメッシュを使ったマイクロサービスを構築したりと技術への挑戦をするようにはしていました。
それでも、メガベンチャーに比べるとあまりにも不十分だったと思います。&lt;/p&gt;
&lt;p&gt;これから、コンピュータサイエンスの勉強はもっと頑張らなければいけないし、Cloud Nativeは自分が最も興味のある分野なので、勉強していきたいと思っています。
特にコンテナのランタイムとセキュリティは英語の本でもなんとか読んで勉強していたつもりなのですが、mercariのインターン生には、ずっと詳しい方がいらっしゃって本当にもっと頑張らなければ、世界で戦えないと痛感しました。
OSSの公開やコントリビュート、CKA資格取得など、学生のうちにやりたいことは山ほどあります。
これからも自分に甘えないで、貪欲に積み重ねていきます。&lt;/p&gt;
&lt;h2 id=&#34;special-thanks&#34;&gt;Special Thanks&lt;/h2&gt;
&lt;p&gt;繰り返しになりますが、株式会社Tech Designに携わった全ての方に心の底からの感謝を申し上げます。&lt;/p&gt;
&lt;p&gt;そして、Tech Designの開発メンバーのみんなへ、
池尻大橋のアパートに毎日泊まって、夢中で開発を続けた日々はきっと僕らの一生の宝物になると信じています。本当に楽しかったです。
それぞれ新天地が決まってきていますが、どんな会社や研究室に行っても、主体的に新しい技術のキャッチアップをして、リーダーシップを発揮し続けてほしいと願っています。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
